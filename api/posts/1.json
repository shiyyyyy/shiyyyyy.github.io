{"total":12,"pageSize":4,"pageCount":3,"data":[{"title":"小程序里的rpx、rem和px","slug":"小程序里的rpx、rem和px","date":"2018-02-03T10:56:34.000Z","updated":"2018-02-03T14:27:14.835Z","comments":true,"path":"api/articles/小程序里的rpx、rem和px.json","excerpt":"","keywords":null,"cover":null,"content":"<p>距写上一篇博客已经接近一个月了,因为这段时间比较忙,工作找到了,入职啊,熟悉代码之类的都挺费时间的。github也是已经很久没用了，因为新公司代码版本管理用的是SVN，哈哈哈。<br>正好在那要做小程序，就写一篇关于小程序rpx的博客。希望能够帮助到大家，也希望大家多多指教。</p>\n<h3 id=\"物理分辨率\"><a href=\"#物理分辨率\" class=\"headerlink\" title=\"物理分辨率\"></a>物理分辨率</h3><p>设备像素，在同一个设备上，它的物理分辨率是固定的，这是厂商在出厂时就设置好了的，即一个设备的分辨率是固定的。</p>\n<h3 id=\"逻辑分辨率\"><a href=\"#逻辑分辨率\" class=\"headerlink\" title=\"逻辑分辨率\"></a>逻辑分辨率</h3><p>CSS像素，viewport中的一个小方格，CSS样式代码中使用的是逻辑分辨率。如果在一个设备中，物理分辨率与逻辑分辨率相等，将不会产生任何问题。但是，在iphone 6中，物理分辨率是750<em>1334，而逻辑分辨率数为375 </em> 667。因此，需要使用大约4个物理像素来显示一个CSS像素。<br><strong>所以CSS的1px并不等于手机上的1像素。在不同物理分辨率的手机上显示CSS的1px需要的物理像素是不同的。</strong></p>\n<h3 id=\"px\"><a href=\"#px\" class=\"headerlink\" title=\"px\"></a>px</h3><p>px:像素 (计算机屏幕上的一个点)<br>这个大家都知道的，不需要多说什么。</p>\n<h3 id=\"rpx\"><a href=\"#rpx\" class=\"headerlink\" title=\"rpx\"></a>rpx</h3><p>尺寸单位<br>rpx（responsive pixel）: 可以根据屏幕宽度进行自适应。规定屏幕宽为750rpx。如在 iPhone6 上，屏幕宽度为375px，共有750个物理像素，则750rpx = 375px = 750物理像素，1rpx = 0.5px = 1物理像素。<br>|设备 | rpx换算px (屏幕宽度/750)    | px换算rpx (750/屏幕宽度)|<br>|- | :-: | -: |<br>|iPhone5        | 1rpx = 0.42px        | 1px = 2.34rpx|<br>|iPhone6        | 1rpx = 0.5px        | 1px = 2rpx|<br>|iPhone6 Plus   | 1rpx = 0.552px    | 1px = 1.81rpx|<br><strong>建议：</strong> 开发微信小程序时设计师可以用 iPhone6 作为视觉稿的标准。因为在 iPhone6 上，屏幕宽度为375px，共有750个物理像素，则750rpx = 375px = 750物理像素，1rpx = 0.5px = 1物理像素，这样会很方便，因为1rpx对应的就是1物理像素。</p>\n<p><strong>注意：</strong> 在较小的屏幕上不可避免的会有一些毛刺，请在开发时尽量避免这种情况。<br><strong>微信小程序也支持rem尺寸单位，rem和rpx的换算关系：rem: 规定屏幕宽度为20rem；1rem = (750/20)rpx</strong></p>\n<h3 id=\"rem\"><a href=\"#rem\" class=\"headerlink\" title=\"rem\"></a>rem</h3><p>相对长度单位。相对于根元素(即html元素)font-size计算值的倍数<br>比如html元素的font-size为20px，那么1rem就相当于20px。font-size为100px，那么1rem就相当于20px。<br>很好理解，不过使用rem需要注意的是不要和em混淆。（rem是相对于根元素html，而em则是相对于元素本身或者有font-size的父元素，有时间我会写一篇em和rem的博客的！）</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>我们在开发中的px与手机的物理像素并不是一比一的关系，应该是倍率的关系（是有1:1的时候的，不过随着现在屏幕分辨率越来越高，可以预见，基本上不会再出现1px与1物理像素1:1的时候了）。<br>同理rpx也不是与物理像素一比一的关系。微信团队将设备定义为750rpx，是以iPhone6的分辨率（750x1334）为基准划分的。</p>\n<p>到此为止，感谢您的阅读，敬请斧正。</p>\n","text":"距写上一篇博客已经接近一个月了,因为这段时间比较忙,工作找到了,入职啊,熟悉代码之类的都挺费时间的。github也是已经很久没用了，因为新公司代码版本管理用的是SVN，哈哈哈。<br>正好在那要做小程序，就写一篇关于小程序rpx的博客。希望能够帮助到大家，也希望大家多多指教。物理","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"vConsole插件","slug":"vConsole插件","date":"2018-01-09T12:38:12.000Z","updated":"2018-01-09T13:23:53.904Z","comments":true,"path":"api/articles/vConsole插件.json","excerpt":"<h1 id=\"vConsole插件的学习\"><a href=\"#vConsole插件的学习\" class=\"headerlink\" title=\"vConsole插件的学习\"></a>vConsole插件的学习</h1><p>写在前面：<br>如果你和我一样认为没有bug是一个console解决不了的，如果有那就两个，是这样的人的话，我在这里吐血推介vConsole插件！！！</p>\n<h2 id=\"什么是vConsole插件\"><a href=\"#什么是vConsole插件\" class=\"headerlink\" title=\"什么是vConsole插件\"></a>什么是vConsole插件</h2><p>vConsole 是一款由微信公众平台前端团队打造的前端调试面板，专治手机端看 log 难题。 目前 vConsole 自带有 2 个面板，默认为“日志”面板，负责展示 log。 第二个是“系统”面板，vConsole 会自动将一些基础信息（如系统版本）打印出来，方便开发者定位问题。若页面是在微信内置浏览器中打开的，vConsole 还会打印出微信版本号、当前网络类型等额外信息。</p>\n<p><strong>简单来说：vConsole:一个轻量、可拓展、针对手机网页的前端开发者调试面板。</strong><br>（小程序上就有很多PC端调试不了的问题，而且vConsole也并不是万能的，比如ArrayBuffer类型的数据就打印不了）</p>","keywords":null,"cover":null,"content":null,"text":"vConsole插件的学习写在前面：<br>如果你和我一样认为没有bug是一个console解决不了的，如果有那就两个，是这样的人的话，我在这里吐血推介vConsole插件！！！什么是vConsole插件vConsole 是一款由微信公众平台前端团队打造的前端调试面板，专治手机端","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"Vue-music","slug":"Vue-music","date":"2017-12-28T12:08:18.000Z","updated":"2017-12-28T14:09:53.834Z","comments":true,"path":"api/articles/Vue-music.json","excerpt":"<h2 id=\"项目简介\"><a href=\"#项目简介\" class=\"headerlink\" title=\"项目简介\"></a>项目简介</h2><p>这是一个仿原生app音乐软件的项目，是使用Vue全家桶来完成的。本项目用到了很多技术，从flex布局、Vue到组件的离的使用，在到webpack编译打包，基本上囊括了前端常用的所有知识。</p>\n<h2 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h2><ul>\n<li>Vue</li>\n<li>Vue-router</li>\n<li>Vuex</li>\n<li>axios</li>\n<li>ES6</li>\n<li>webpack</li>\n<li>stylus</li>\n</ul>","keywords":null,"cover":"https://github.com/shiyyyyy/vue-music/raw/master/static/vue-music1.gif","content":null,"text":"项目简介这是一个仿原生app音乐软件的项目，是使用Vue全家桶来完成的。本项目用到了很多技术，从flex布局、Vue到组件的离的使用，在到webpack编译打包，基本上囊括了前端常用的所有知识。技术栈VueVue-routerVuexaxiosES6webpackstylus主要","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"小程序-百思不得姐","slug":"小程序-百思不得姐","date":"2017-12-27T08:49:42.000Z","updated":"2017-12-27T09:51:08.667Z","comments":true,"path":"api/articles/小程序-百思不得姐.json","excerpt":"<h2 id=\"这可是一个小程序！\"><a href=\"#这可是一个小程序！\" class=\"headerlink\" title=\"这可是一个小程序！\"></a>这可是一个小程序！</h2><p>这不是我的第一个小程序，但是是一个最像是项目的小程序了，之前写过一些快递查询、评测文章等小程序，但是都比较小，是真的“小”程序，这个并不是我自己写的，是我在网上找到并照着仿写出来的，在这个过程中也修复了一些bug，通过这个学习到了很多，真的很感谢作者，也很感谢开源精神。我本身也是很崇尚开源精神的，只是现在…感觉自己水平有限（总会厉害的嘛^_^）</p>","keywords":null,"cover":"https://github.com/shiyyyyy/wx-baisi/raw/master/ScreenSnap/%E5%85%B3%E6%B3%A8.png","content":null,"text":"这可是一个小程序！这不是我的第一个小程序，但是是一个最像是项目的小程序了，之前写过一些快递查询、评测文章等小程序，但是都比较小，是真的“小”程序，这个并不是我自己写的，是我在网上找到并照着仿写出来的，在这个过程中也修复了一些bug，通过这个学习到了很多，真的很感谢作者，也很感谢开","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}