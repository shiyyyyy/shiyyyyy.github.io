{"total":6,"pageSize":4,"pageCount":2,"data":[{"title":"Vue父子组件传值-非bus","slug":"Vue父子组件传值-非bus","date":"2017-12-26T09:28:47.000Z","updated":"2017-12-26T12:03:04.507Z","comments":true,"path":"api/articles/Vue父子组件传值-非bus.json","excerpt":"","keywords":null,"cover":"https://github.com/shiyyyyy/vue-transmit-value/raw/master/vue-transmit-value.gif","content":"<h2 id=\"Vue父子组件之间的传值-非bus\"><a href=\"#Vue父子组件之间的传值-非bus\" class=\"headerlink\" title=\"Vue父子组件之间的传值(非bus)\"></a>Vue父子组件之间的传值(非bus)</h2><p>虽然Vue有Vuex组件和bus方式都可以很方便的进行数据传递，但是Vuex只要用在比较大的项目里，而bus有时候并不比props方式传递数据更加方便，所以父子组件之间的数据传递是很常用的。</p>\n<h3 id=\"父组件传值给子组件\"><a href=\"#父组件传值给子组件\" class=\"headerlink\" title=\"父组件传值给子组件\"></a>父组件传值给子组件</h3><p><strong>方法一: 使用props</strong> </p>\n<blockquote>\n<p>HTML<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    &lt;child :message=<span class=\"string\">\"msg\"</span> &gt;&lt;/child&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>JS<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> child = &#123;</span><br><span class=\"line\">        template: <span class=\"string\">\"&lt;div&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt;\"</span>,</span><br><span class=\"line\">        props:[<span class=\"string\">\"message\"</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">        el:<span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">        data:&#123;</span><br><span class=\"line\">            msg: <span class=\"string\">\"我是父组件的值\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        components: &#123;</span><br><span class=\"line\">            child</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"><span class=\"string\">``</span><span class=\"string\">`    </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">父传子需要在父组件的模板里的子组件标签里v-bind:子组件需要的值。然后再子组件内的props里面接收就可以了。</span></span><br><span class=\"line\"><span class=\"string\">**props**也可以对象的方式定义，好处是可以定义默认值，就算没有值传过来，也可以使用默认值。而且还可以检查传过来的值的类型。</span></span><br><span class=\"line\"><span class=\"string\">`</span><span class=\"string\">``</span>JavaScript</span><br><span class=\"line\">    <span class=\"keyword\">var</span> child = &#123;</span><br><span class=\"line\">        template: <span class=\"string\">\"&lt;div&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt;\"</span>,</span><br><span class=\"line\">        props:&#123;</span><br><span class=\"line\">            type: <span class=\"built_in\">String</span>,</span><br><span class=\"line\">            <span class=\"keyword\">default</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><strong>方法二: 直接在data里面获取</strong></p>\n<blockquote>\n<p>HTML<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"app\"</span>&gt;</span><br><span class=\"line\">    &lt;child :message=<span class=\"string\">\"msg\"</span> &gt;&lt;/child&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/div&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>JS<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> child = &#123;</span><br><span class=\"line\">            template: <span class=\"string\">`&lt;div @click=cc&gt;111&lt;/div&gt;`</span>,</span><br><span class=\"line\">            methods:&#123;</span><br><span class=\"line\">                cc()&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">        el:<span class=\"string\">\"#app\"</span>,</span><br><span class=\"line\">        data:&#123;</span><br><span class=\"line\">            msg: <span class=\"string\">\"我是父组件的值\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        components: &#123;</span><br><span class=\"line\">            child</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">``</span><span class=\"string\">`  </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">点击111就会在控制台打印出子组件，在子组件中有个`</span>$attrs<span class=\"string\">`属性，这个属性里面就是父组件写在子组件标签里面要传递的值，可以使用`</span><span class=\"keyword\">this</span>.$attrs.属性名<span class=\"string\">`进行使用。(使用这种方法的话，不能同时和props获取同一个传递过来的值，否则`</span>$attrs<span class=\"string\">`里面会没有要获取的，因为它已经在props里面了)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">### 子组件传值给父组件</span></span><br><span class=\"line\"><span class=\"string\">&gt; 使用v-onc传递数据</span></span><br><span class=\"line\"><span class=\"string\">所有Vue实例都实现了Events接口，即通过 `</span>$on(eventName)<span class=\"string\">` 监听事件 ; 通过 `</span>$emit(eventName)<span class=\"string\">` 触发事件</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&gt; HTML</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">`</span><span class=\"string\">``</span>JavaScript</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div id=<span class=\"string\">\"count\"</span>&gt;</span><br><span class=\"line\">        &lt;p&gt;&#123;&#123; number &#125;&#125;&lt;<span class=\"regexp\">/p&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;child @add=\"getNumber\"&gt;&lt;/</span>child&gt;     </span><br><span class=\"line\">    &lt;<span class=\"regexp\">/div&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>JS</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template id=<span class=\"string\">\"child\"</span>&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;button @click=<span class=\"string\">\"addNumber\"</span>&gt;&#123;&#123; count &#125;&#125;&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    Vue.component('child', &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        template: '#child',</span></span><br><span class=\"line\"><span class=\"regexp\">        data () &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            return &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">                count: 0</span></span><br><span class=\"line\"><span class=\"regexp\">            &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">        methods: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            addNumber () &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">                var number = ++this.count * 10</span></span><br><span class=\"line\"><span class=\"regexp\">                this.$emit('add', number)</span></span><br><span class=\"line\"><span class=\"regexp\">            &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;)</span></span><br><span class=\"line\"><span class=\"regexp\">    new Vue(&#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        el: '#count',</span></span><br><span class=\"line\"><span class=\"regexp\">        data: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            number: 0</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;,</span></span><br><span class=\"line\"><span class=\"regexp\">        methods: &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">            getNumber (number) &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">                console.log(number + \"lalal\")</span></span><br><span class=\"line\"><span class=\"regexp\">                this.number = number</span></span><br><span class=\"line\"><span class=\"regexp\">            &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">        &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;)</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>\n<p>这就是一个比较简单的子传父的代码，点击button的时候，父组件的数字是子组件数字*10。通过<code>$on(eventName)</code> 监听事件和<code>$emit(eventName)</code> 触发事件来进行数据的传递</p>\n<p><strong>以下这是我做的一个小demo，只用了父子组件之间的传值。</strong></p>\n<h3 id=\"预览图\"><a href=\"#预览图\" class=\"headerlink\" title=\"预览图\"></a>预览图</h3><p><img src=\"https://github.com/shiyyyyy/vue-transmit-value/raw/master/vue-transmit-value.gif\" alt=\"img\"></p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><p>代码被我放在我的github上了，欢迎大家来star~（^_^）</p>\n<p><strong>演示地址</strong><br><a href=\"https://shiyyyyy.github.io/vue-transmit-value/\" target=\"_blank\" rel=\"noopener\">仿网易轮播图演示地址</a></p>\n<p><strong>代码地址</strong><br><a href=\"https://github.com/shiyyyyy/vue-transmit-value\">仿网易轮播图代码地址</a></p>\n","text":"Vue父子组件之间的传值(非bus)虽然Vue有Vuex组件和bus方式都可以很方便的进行数据传递，但是Vuex只要用在比较大的项目里，而bus有时候并不比props方式传递数据更加方便，所以父子组件之间的数据传递是很常用的。父组件传值给子组件方法一: 使用props HTML<","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"仿网易轮播图","slug":"仿网易轮播图","date":"2017-12-26T08:24:46.000Z","updated":"2017-12-26T11:50:57.761Z","comments":true,"path":"api/articles/仿网易轮播图.json","excerpt":"","keywords":null,"cover":"https://github.com/shiyyyyy/wy-slider/raw/master/wy-slider.gif","content":"<h2 id=\"据说这是最好的轮播图之一\"><a href=\"#据说这是最好的轮播图之一\" class=\"headerlink\" title=\"据说这是最好的轮播图之一\"></a>据说这是最好的轮播图之一</h2><p>网易的轮播图第一印象让我感到很神奇，它是怎么轮播的？点击相隔几个的图片的时候，怎么直接就从点击的那边出来了，中间的图那？</p>\n<p>秉持着探究的态度，我就在网上找到了很多源码…</p>\n<p>看源码的时候，我第一次认识到了原来HTML还可以玩出很多花样~当时的我只以为JS才是最重要的，感觉我的精神被它的源码粗暴的蹂躏了，要不然怎么说前端三板斧，不是没有道理的，真的是缺一不可（我一直都认为CSS才是最难精通的那个…）</p>\n<h2 id=\"网易轮播图的优点\"><a href=\"#网易轮播图的优点\" class=\"headerlink\" title=\"网易轮播图的优点\"></a>网易轮播图的优点</h2><ul>\n<li>实现了不需要左右两边加图片就能无缝循环轮播（这可不是呼吸轮播图，它都不会滚动~）</li>\n<li>用很巧妙的HTML布局方式，实现了点击相隔的图片按钮的时候，点击哪边的按钮，图片就从哪边出来，而不会显示出它们之间的图片</li>\n<li>用户体验很好（特别是懂行的~）</li>\n</ul>\n<h2 id=\"预览图\"><a href=\"#预览图\" class=\"headerlink\" title=\"预览图\"></a>预览图</h2><p><img src=\"https://github.com/shiyyyyy/wy-slider/raw/master/wy-slider.gif\" alt=\"img\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>代码被我放在我的github上了，欢迎大家来star~（^_^）</p>\n<p><strong>演示地址</strong><br><a href=\"https://shiyyyyy.github.io/wy-slider/\" target=\"_blank\" rel=\"noopener\">仿网易轮播图演示地址</a></p>\n<p><strong>代码地址</strong><br><a href=\"https://github.com/shiyyyyy/wy-slider\">仿网易轮播图代码地址</a></p>\n","text":"据说这是最好的轮播图之一网易的轮播图第一印象让我感到很神奇，它是怎么轮播的？点击相隔几个的图片的时候，怎么直接就从点击的那边出来了，中间的图那？秉持着探究的态度，我就在网上找到了很多源码…看源码的时候，我第一次认识到了原来HTML还可以玩出很多花样~当时的我只以为JS才是最重要的","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"jQuery呼吸轮播图","slug":"jQuery呼吸轮播图","date":"2017-12-26T08:14:17.000Z","updated":"2017-12-26T09:24:11.455Z","comments":true,"path":"api/articles/jQuery呼吸轮播图.json","excerpt":"","keywords":null,"cover":"https://github.com/shiyyyyy/jQuery-slider/raw/master/jQuery-slider.gif","content":"<h2 id=\"jQuery呼吸轮播图\"><a href=\"#jQuery呼吸轮播图\" class=\"headerlink\" title=\"jQuery呼吸轮播图\"></a>jQuery呼吸轮播图</h2><p>这是我学习jQuery的时候做的轮播图，非常的简单。<br>京东用的就是这种呼吸轮播图哦。<br><strong>呼吸轮播图的好处</strong></p>\n<ul>\n<li>不用在前后多加两张图片实现左右无缝滚动，结构更清晰</li>\n<li>实现超级简单！（当然，只是用jQuery的时候简单，要使用原生，淡入淡出就要写很多代码了）</li>\n<li>相隔多个图片也不会出现滑动超快的现象（因为它根本就不滑动啊哈哈哈）</li>\n</ul>\n<h2 id=\"预览图\"><a href=\"#预览图\" class=\"headerlink\" title=\"预览图\"></a>预览图</h2><p><img src=\"https://github.com/shiyyyyy/jQuery-slider/raw/master/jQuery-slider.gif\" alt=\"img\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>代码被我放在我的github上了，欢迎大家来star~（这个真的超简单哦^_^）</p>\n<p><strong>演示地址</strong><br><a href=\"https://shiyyyyy.github.io/jQuery-slider/\" target=\"_blank\" rel=\"noopener\">jQuery呼吸轮播图演示地址</a></p>\n<p><strong>代码地址</strong><br><a href=\"https://github.com/shiyyyyy/jQuery-slider\">jQuery呼吸轮播图代码地址</a></p>\n","text":"jQuery呼吸轮播图这是我学习jQuery的时候做的轮播图，非常的简单。<br>京东用的就是这种呼吸轮播图哦。<br>呼吸轮播图的好处不用在前后多加两张图片实现左右无缝滚动，结构更清晰实现超级简单！（当然，只是用jQuery的时候简单，要使用原生，淡入淡出就要写很多代码了）相隔","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"从基础轮播图开始","slug":"从基础轮播图开始","date":"2017-12-26T07:29:44.000Z","updated":"2017-12-26T09:23:39.950Z","comments":true,"path":"api/articles/从基础轮播图开始.json","excerpt":"","keywords":null,"cover":"https://github.com/shiyyyyy/js-slider/raw/master/JS-slider.gif","content":"<h2 id=\"这是我写的第一个轮播图，对我来说很有意义。\"><a href=\"#这是我写的第一个轮播图，对我来说很有意义。\" class=\"headerlink\" title=\"这是我写的第一个轮播图，对我来说很有意义。\"></a>这是我写的第一个轮播图，对我来说很有意义。</h2><p>这只是一个用原生JS写的最基础的轮播图，没有什么花哨的东西，记得当时就突然想写一个轮播图了，然后就开始写，写了一个晚上才写出来，而且感觉代码写的不简练，应该是有冗余的。不过第一个嘛，我还是留着它了。</p>\n<h2 id=\"预览图\"><a href=\"#预览图\" class=\"headerlink\" title=\"预览图\"></a>预览图</h2><p><img src=\"https://github.com/shiyyyyy/js-slider/raw/master/JS-slider.gif\" alt=\"img\"></p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><p>代码被我放在我的github上了，欢迎大家来star~（虽然很烂啦^_^）</p>\n<p><strong>演示地址</strong><br><a href=\"https://shiyyyyy.github.io/js-slider\" target=\"_blank\" rel=\"noopener\">原生JS基础轮播图演示地址</a></p>\n<p><strong>代码地址</strong><br><a href=\"https://github.com/shiyyyyy/js-slider\">原生JS基础轮播图代码地址</a></p>\n","text":"这是我写的第一个轮播图，对我来说很有意义。这只是一个用原生JS写的最基础的轮播图，没有什么花哨的东西，记得当时就突然想写一个轮播图了，然后就开始写，写了一个晚上才写出来，而且感觉代码写的不简练，应该是有冗余的。不过第一个嘛，我还是留着它了。预览图 [Figure] 原生JS基础轮","link":"","raw":null,"photos":[],"categories":[],"tags":[]}]}