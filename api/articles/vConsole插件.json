{"title":"vConsole插件","slug":"vConsole插件","date":"2018-01-09T12:38:12.000Z","updated":"2018-01-09T13:20:00.652Z","comments":true,"path":"api/articles/vConsole插件.json","photos":[],"link":"","excerpt":"vConsole插件的学习写在前面：<br>如果你和我一样认为没有bug是一个console解决不了的，如果有那就两个，是这样的人的话，我在这里吐血推介vConsole插件！！！什么是vConsole插件vConsole 是一款由微信公众平台前端团队打造的前端调试面板，专治手机端看 log 难题。 目前 vConsole 自带有 2 个面板，默认为“日志”面板，负责展示 log。 第二个是“系统”面板，vConsole 会自动将一些基础信息（如系统版本）打印出来，方便开发者定位问题。若页面是在微信内置浏览器中打开的，vConsole 还会打印出微信版本号、当前网络类型等额外信息。简单来说：vConsole:一个轻量、可拓展、针对手机网页的前端开发者调试面板。<br>（小程序上就有很多PC端调试不了的问题，而且vConsole也并不是万能的，比如ArrayBuffer类型的数据就打印不了）","covers":null,"content":"<h1 id=\"vConsole插件的学习\"><a href=\"#vConsole插件的学习\" class=\"headerlink\" title=\"vConsole插件的学习\"></a>vConsole插件的学习</h1><p>写在前面：<br>如果你和我一样认为没有bug是一个console解决不了的，如果有那就两个，是这样的人的话，我在这里吐血推介vConsole插件！！！</p>\n<h2 id=\"什么是vConsole插件\"><a href=\"#什么是vConsole插件\" class=\"headerlink\" title=\"什么是vConsole插件\"></a>什么是vConsole插件</h2><p>vConsole 是一款由微信公众平台前端团队打造的前端调试面板，专治手机端看 log 难题。 目前 vConsole 自带有 2 个面板，默认为“日志”面板，负责展示 log。 第二个是“系统”面板，vConsole 会自动将一些基础信息（如系统版本）打印出来，方便开发者定位问题。若页面是在微信内置浏览器中打开的，vConsole 还会打印出微信版本号、当前网络类型等额外信息。</p>\n<p><strong>简单来说：vConsole:一个轻量、可拓展、针对手机网页的前端开发者调试面板。</strong><br>（小程序上就有很多PC端调试不了的问题，而且vConsole也并不是万能的，比如ArrayBuffer类型的数据就打印不了）</p>\n<a id=\"more\"></a>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"下载模块\"><a href=\"#下载模块\" class=\"headerlink\" title=\"下载模块\"></a>下载模块</h3><p>使用npm或者yarn进行安装：</p>\n<blockquote>\n<p><strong>npm：</strong><br>npm install vconsole</p>\n<p><strong>yarn：</strong></p>\n</blockquote>\n<h3 id=\"引入\"><a href=\"#引入\" class=\"headerlink\" title=\"引入\"></a>引入</h3><p><strong>1.可以直接在<head>标签内引入</head></strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">  &lt;script src=<span class=\"string\">\"path/to/vconsole.min.js\"</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">  &lt;script&gt;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> vConsole = <span class=\"keyword\">new</span> VConsole();</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>head&gt;</span><br></pre></td></tr></table></figure></p>\n<p><strong>2.也可以在 module 内使用 require() 引入模块</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> VConsole = <span class=\"built_in\">require</span>(<span class=\"string\">'path/to/vconsole.min.js'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> vConsole = <span class=\"keyword\">new</span> VConsole();</span><br></pre></td></tr></table></figure></p>\n<p>需要注意的是，VConsole 只是 vConsole 的原型，而非一个已实例化的对象。所以在手动 new 实例化之前，vConsole 不会被插入到网页中。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"初始化-amp-配置\"><a href=\"#初始化-amp-配置\" class=\"headerlink\" title=\"初始化&amp;配置\"></a>初始化&amp;配置</h3><p>引入后, 需要手动初始化 vConsole：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> vConsole = <span class=\"keyword\">new</span> VConsole(option);</span><br></pre></td></tr></table></figure></p>\n<p><code>option</code> 是一个选填的 <code>object</code> 对象，具体配置定义请<a href=\"https://github.com/Tencent/vConsole/blob/dev/doc/public_properties_methods_CN.md\">点击这里</a>，查看官方文档。</p>\n<p>使用 <code>setOption()</code> 来更新 <code>option</code>：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vConsole.setOption(<span class=\"string\">'maxLogNumber'</span>, <span class=\"number\">5000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 或者：</span></span><br><span class=\"line\">vConsole.setOption(&#123;<span class=\"attr\">maxLogNumber</span>: <span class=\"number\">5000</span>&#125;);</span><br><span class=\"line\"><span class=\"comment\">// maxLogNumber：超出上限的日志会被自动清除。</span></span><br><span class=\"line\"></span><br><span class=\"line\">与 PC 端打印 log 一致，可直接使用 <span class=\"string\">`console.log()`</span> 等方法直接打印日志：</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello World'</span>);</span><br></pre></td></tr></table></figure></p>\n<p>未加载 vConsole 模块时，·console.log()· 会直接打印到原生控制台中；加载 vConsole 后，日志会打印到页面前端+原生控制台。</p>\n<h3 id=\"支持的日志类型\"><a href=\"#支持的日志类型\" class=\"headerlink\" title=\"支持的日志类型\"></a>支持的日志类型</h3><p>支持 5 种不同类型的日志，会以不同的颜色输出到前端面板：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'foo'</span>);   <span class=\"comment\">// 白底黑字</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.info(<span class=\"string\">'bar'</span>);  <span class=\"comment\">// 白底紫字</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.debug(<span class=\"string\">'oh'</span>);  <span class=\"comment\">// 白底黄字</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.warn(<span class=\"string\">'foo'</span>);  <span class=\"comment\">// 黄底黄字</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.error(<span class=\"string\">'bar'</span>); <span class=\"comment\">// 红底红字</span></span><br><span class=\"line\">也支持打印<span class=\"built_in\">Object</span>和<span class=\"built_in\">Array</span>类型的数据，会以json的形式输出。</span><br><span class=\"line\">支出传入多个参数，会以空格隔开。</span><br><span class=\"line\">支持使用 [system] 作为第一个参数，来将 log 输出到 System 面版。</span><br></pre></td></tr></table></figure></p>\n<p>总之，如果开发手机端的项目，vConsole会帮上你的大忙，特别是我这种重度console使用者…</p>\n<p><strong>差点忘了</strong><br><a href=\"https://github.com/Tencent/vConsole/blob/dev/doc/public_properties_methods_CN.md\">vConsole公共属性及方法</a><br><a href=\"https://github.com/Tencent/vConsole/blob/dev/doc/helper_functions_CN.md\">vConsole辅助函数</a></p>\n","categories":[],"tags":[]}