{"title":"Vue-music","slug":"Vue-music","date":"2017-12-28T12:08:18.000Z","updated":"2017-12-28T14:09:53.834Z","comments":true,"path":"api/articles/Vue-music.json","photos":[],"link":"","excerpt":"项目简介这是一个仿原生app音乐软件的项目，是使用Vue全家桶来完成的。本项目用到了很多技术，从flex布局、Vue到组件的离的使用，在到webpack编译打包，基本上囊括了前端常用的所有知识。技术栈VueVue-routerVuexaxiosES6webpackstylus","covers":["https://github.com/shiyyyyy/vue-music/raw/master/static/vue-music1.gif"],"content":"<h2 id=\"项目简介\"><a href=\"#项目简介\" class=\"headerlink\" title=\"项目简介\"></a>项目简介</h2><p>这是一个仿原生app音乐软件的项目，是使用Vue全家桶来完成的。本项目用到了很多技术，从flex布局、Vue到组件的离的使用，在到webpack编译打包，基本上囊括了前端常用的所有知识。</p>\n<h2 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h2><ul>\n<li>Vue</li>\n<li>Vue-router</li>\n<li>Vuex</li>\n<li>axios</li>\n<li>ES6</li>\n<li>webpack</li>\n<li>stylus</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"主要难点\"><a href=\"#主要难点\" class=\"headerlink\" title=\"主要难点\"></a>主要难点</h2><h4 id=\"1-组件之间的数据共享-特别是非父子组件\"><a href=\"#1-组件之间的数据共享-特别是非父子组件\" class=\"headerlink\" title=\"1.组件之间的数据共享(特别是非父子组件)\"></a>1.组件之间的数据共享(特别是非父子组件)</h4><blockquote>\n<p>使用父子组件之间的传递数据方法，会特别的繁琐，特别是多层嵌套结构，而且对兄弟组件无能为力，更会导致代码的难以维护。（写完了看第二遍就不会了怎么维护。。。）</p>\n</blockquote>\n<p><strong>解决办法：</strong> 采用<a href=\"https://vuex.vuejs.org/\" target=\"_blank\" rel=\"noopener\">Vuex</a>进行状态管理。把需要共享的数据或者状态存储到store对象中，然后在计算属性里获取数据，可以很简单的获取实时的数据。</p>\n<blockquote>\n<p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</p>\n</blockquote>\n<p>每一个 Vuex 应用的核心就是 store（仓库）。”store” 基本上就是一个容器，它包含着应用中大部分的状态(state)。</p>\n<p>Vuex 的状态存储是响应式的。当 Vue 组件从 store 中读取状态的时候，若 store 中的状态发生变化，那么相应的组件也会相应地得到高效更新。</p>\n<p>你不能直接改变 store 中的状态。改变 store 中的状态的唯一途径就是显式地提交(commit) mutations。这样使得我们可以方便地跟踪每一个状态的变化。<br><br></p>\n<h4 id=\"2-播放器内核的实现\"><a href=\"#2-播放器内核的实现\" class=\"headerlink\" title=\"2.播放器内核的实现\"></a>2.播放器内核的实现</h4><blockquote>\n<p>从播放器内核开始逻辑就变得更复杂，而且audio标签很多事件都不知道是什么，需要思考很久才能开始下一步，比如切换播放状态，是单曲循环还是列表循环或者随机播放，随机播放需要怎样给数组排序等等等等。。。</p>\n</blockquote>\n<p><strong>解决办法：</strong> 慢慢来，一点点来总会把它给做出来，哈哈哈哈。很多地方不明白就去网上找，百度不行就谷歌，总会找到办法的。（你会发现，就算你想要遇到一个从来没人遇到的问题，都是很难的…）</p>\n<p><br></p>\n<h4 id=\"3-各种小的细节问题\"><a href=\"#3-各种小的细节问题\" class=\"headerlink\" title=\"3.各种小的细节问题\"></a>3.各种小的细节问题</h4><blockquote>\n<p>没错,就是各种小问题,其实大的问题一般都比较容易找出问题的原因,以及解决办法,最多就是学习一个新插件之类的。但是小问题是真的恶心死人，通过报错很难定位到问题代码，而且由于文件很多，嵌套很复杂，就更难找到原因，一个小问题耽误的时间可能比解决一个大问题所花费的时间更长，最关键的，小毛病会让人心态爆炸。</p>\n</blockquote>\n<p><strong>解决办法：</strong> 首先，细心细心细心！！！很多小毛病都是由于粗心大意引起的，比如变量名写错了之类的问题。其次，千万要用热加载，因为要频繁的查看进度，写点就去网页看看效果，不要一次写了很多，感觉没问题，却爆了一大堆的错误。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>虽然只是做了个小小的个人项目，但是我的收获是非常大的，不仅学习到了很多新的知识点，也对很多本来就会的知识点掌握得更加的牢固，对 vue全家桶 的理解也更深了一些。总之收获颇丰。</p>\n<h3 id=\"预览图\"><a href=\"#预览图\" class=\"headerlink\" title=\"预览图\"></a>预览图</h3><p><img src=\"https://github.com/shiyyyyy/vue-music/raw/master/static/vue-music1.gif\" alt=\"img\"><br><img src=\"https://github.com/shiyyyyy/vue-music/raw/master/static/vue-music2.gif\" alt=\"img\"><br><img src=\"https://github.com/shiyyyyy/vue-music/raw/master/static/vue-music3.gif\" alt=\"img\"><br><img src=\"https://github.com/shiyyyyy/vue-music/raw/master/static/vue-music4.gif\" alt=\"img\"><br><img src=\"https://github.com/shiyyyyy/vue-music/raw/master/static/vue-music5.gif\" alt=\"img\"><br><img src=\"https://github.com/shiyyyyy/vue-music/raw/master/static/vue-music6.gif\" alt=\"img\"><br><img src=\"https://github.com/shiyyyyy/vue-music/raw/master/static/vue-music7.gif\" alt=\"img\"></p>\n<h3 id=\"代码地址\"><a href=\"#代码地址\" class=\"headerlink\" title=\"代码地址\"></a>代码地址</h3><p><a href=\"https://github.com/shiyyyyy/vue-music\">Vue-music代码地址</a></p>\n<p>欢迎star哦(′▽`〃)</p>\n","categories":[],"tags":[]}